name: tf-gha-deploy-infra
on:
  workflow_dispatch:

env:
    # Read variables from config file based on branch or default
    config_env: 'prod' # Default to prod, can be customized based on branch strategy

jobs:
  get-config:
      uses: Azure/mlops-templates/.github/workflows/read-yaml.yml@main
      with:
        file_name: config-infra-${{ env.config_env }}.yml # Dynamically select config

  deploy-infra:
    needs: get-config
    uses: Azure/mlops-templates/.github/workflows/tf-gha-deploy.yml@main
    with:
      # General Terraform Settings
      terraform_version: ${{ needs.get-config.outputs.terraform_version || '1.1.7' }} # Use config value or default
      terraform_workingdir: ${{ needs.get-config.outputs.terraform_workingdir || 'infrastructure' }}

      # Azure Backend Configuration (Ensure these TF state resources are created beforehand or via bootstrap)
      terraform_st_resource_group: ${{ needs.get-config.outputs.terraform_st_resource_group }}
      terraform_st_storage_account: ${{ needs.get-config.outputs.terraform_st_storage_account }}
      terraform_st_container_name: ${{ needs.get-config.outputs.terraform_st_container_name || 'tfstate' }}
      terraform_st_key: ${{ needs.get-config.outputs.terraform_st_key || 'fraud-detection.tfstate' }}

      # Deployment Variables passed to Terraform plan/apply
      # These correspond to variables defined in infrastructure/variables.tf
      location: ${{ needs.get-config.outputs.location }}
      prefix: ${{ needs.get-config.outputs.namespace }} # 'namespace' from config used as 'prefix' in TF
      postfix: ${{ needs.get-config.outputs.postfix }}
      environment: ${{ needs.get-config.outputs.environment }}
      enable_aml_computecluster: ${{ needs.get-config.outputs.enable_aml_computecluster || true }}
      enable_monitoring: ${{ needs.get-config.outputs.enable_monitoring || false }}
      # Note: client_secret is passed as a secret below, not directly as a variable

    secrets:
      # Credentials for Azure Login and Terraform Provider
      azure_credentials: ${{ secrets.AZURE_CREDENTIALS }} # JSON output from 'az ad sp create-for-rbac'
      # Required by the Terraform provider configuration within main.tf (azurerm provider block)
      # Ensure these secrets (ARM_CLIENT_ID etc.) are configured in GitHub repo secrets
      client_id: ${{ secrets.ARM_CLIENT_ID }}
      client_secret: ${{ secrets.ARM_CLIENT_SECRET }} # Passed securely
      subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      tenant_id: ${{ secrets.ARM_TENANT_ID }}